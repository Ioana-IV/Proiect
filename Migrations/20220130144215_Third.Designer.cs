// <auto-generated />
using System;
using Ivanov_Ioana_Proiect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ivanov_Ioana_Proiect.Migrations
{
    [DbContext(typeof(Ivanov_Ioana_ProiectContext))]
    [Migration("20220130144215_Third")]
    partial class Third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.Payee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("PayeeID")
                        .HasColumnType("int");

                    b.Property<string>("PayeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PayeeID");

                    b.ToTable("Payee");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.PaymentType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("AvailableAmmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PaymentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PaymentTypeID");

                    b.ToTable("PaymentType");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.Purchase", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayeeID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("PayeeID");

                    b.HasIndex("PaymentTypeID");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.Category", b =>
                {
                    b.HasOne("Ivanov_Ioana_Proiect.Models.Category", null)
                        .WithMany("Categories")
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.Payee", b =>
                {
                    b.HasOne("Ivanov_Ioana_Proiect.Models.Payee", null)
                        .WithMany("Payees")
                        .HasForeignKey("PayeeID");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.PaymentType", b =>
                {
                    b.HasOne("Ivanov_Ioana_Proiect.Models.PaymentType", null)
                        .WithMany("PaymentTypes")
                        .HasForeignKey("PaymentTypeID");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.Purchase", b =>
                {
                    b.HasOne("Ivanov_Ioana_Proiect.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ivanov_Ioana_Proiect.Models.Payee", "Payee")
                        .WithMany()
                        .HasForeignKey("PayeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ivanov_Ioana_Proiect.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Payee");

                    b.Navigation("PaymentType");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.Category", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.Payee", b =>
                {
                    b.Navigation("Payees");
                });

            modelBuilder.Entity("Ivanov_Ioana_Proiect.Models.PaymentType", b =>
                {
                    b.Navigation("PaymentTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
